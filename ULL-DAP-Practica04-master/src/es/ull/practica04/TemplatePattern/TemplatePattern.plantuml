@startuml

title __TEMPLATEPATTERN's Class Diagram__\n

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.DivConqFactory {
        + getDivConqTemplate()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    abstract class es.ull.practica03.TemplatePattern.DivConqTemplate {
        + solve()
        {abstract} # combine()
        {abstract} # decompose()
        {abstract} # isSimple()
        {abstract} # simplySolve()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    interface es.ull.practica03.TemplatePattern.IProblem {
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    interface es.ull.practica03.TemplatePattern.ISolution {
        {abstract} + toString()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.Main {
        {static} + DELIMITER : String
        {static} + getArrayFromUser()
        {static} + main()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.MergeSortDivConq {
        # combine()
        # decompose()
        # isSimple()
        # simplySolve()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.MergeSortProblem {
        - disorderedArray : ArrayList<Integer>
        + MergeSortProblem()
        + getDisorderedArray()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.MergeSortSolution {
        - orderedArray : ArrayList<Integer>
        + MergeSortSolution()
        + getOrderedArray()
        + toString()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.PowDivConq {
        # combine()
        # decompose()
        # isSimple()
        # simplySolve()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.PowProblem {
        - base_ : int
        - exponente_ : int
        + PowProblem()
        + getBase()
        + getExponente()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.PowSolution {
        - result : int
        + PowSolution()
        + getResult()
        + toString()
    }
  }
  

  namespace es.ull.practica03.TemplatePattern {
    class es.ull.practica03.TemplatePattern.ProblemFactory {
        + getProblem()
    }
  }
  

  es.ull.practica03.TemplatePattern.MergeSortDivConq -up-|> es.ull.practica03.TemplatePattern.DivConqTemplate
  es.ull.practica03.TemplatePattern.MergeSortProblem .up.|> es.ull.practica03.TemplatePattern.IProblem
  es.ull.practica03.TemplatePattern.MergeSortSolution .up.|> es.ull.practica03.TemplatePattern.ISolution
  es.ull.practica03.TemplatePattern.PowDivConq -up-|> es.ull.practica03.TemplatePattern.DivConqTemplate
  es.ull.practica03.TemplatePattern.PowProblem .up.|> es.ull.practica03.TemplatePattern.IProblem
  es.ull.practica03.TemplatePattern.PowSolution .up.|> es.ull.practica03.TemplatePattern.ISolution


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
